// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../db/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  username     String      @unique
  password     String?
  createdAt    DateTime    @default(now())
  refreshToken String?
  googleId     String?     @unique
  photo        String?
  audiences    Audience[]
  savedPosts   SavedPost[]

  @@map("users")
}

model Audience {
  id         String      @id @default(uuid())
  title      String
  searchTerm String      @default("")
  createdAt  DateTime    @default(now())
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  subreddits Subreddit[]

  @@map("audiences")
}

model Subreddit {
  id          String     @id @default(uuid())
  name        String     @unique
  title       String
  subscribers Int
  icon        String
  url         String
  audiences   Audience[]
  posts       Post[]

  @@map("subreddits")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  url       String
  upvotes   Int
  comments  Int
  author    String
  flair     String?
  selftext  String?
  fetchedAt DateTime @default(now())

  subreddit   Subreddit @relation(fields: [subredditId], references: [id])
  subredditId String

  savedByUsers SavedPost[]

  @@map("posts")
}

model SavedPost {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  savedAt DateTime @default(now())

  @@unique([userId, postId]) // ensures a user can't save the same post twice
  @@map("saved_posts")
}
